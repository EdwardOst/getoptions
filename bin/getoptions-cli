#!/bin/sh
# shellcheck disable=SC2004

set -euf

GETOPTIONS_VERSION="2.4.0"
SHELLCHECK="shell=sh disable=SC2004,SC2145,SC2194"

[ "${ZSH_VERSION:-}" ] && setopt shwordsplit

# https://github.com/ko1nksm/readlinkf
readlinkf() {
	[ "${1:-}" ] || return 1
	max_symlinks=40
	CDPATH='' # to avoid changing to an unexpected directory

	target=$1
	[ -e "${target%/}" ] || target=${1%"${1##*[!/]}"} # trim trailing slashes
	[ -d "${target:-/}" ] && target="$target/"

	cd -P . 2>/dev/null || return 1
	while [ "$max_symlinks" -ge 0 ] && max_symlinks=$((max_symlinks - 1)); do
		if [ ! "$target" = "${target%/*}" ]; then
			case $target in
				/*) cd -P "${target%/*}/" 2>/dev/null || break ;;
				*) cd -P "./${target%/*}" 2>/dev/null || break ;;
			esac
			target=${target##*/}
		fi

		if [ ! -L "$target" ]; then
			target="${PWD%/}${target:+/}${target}"
			printf '%s\n' "${target:-/}"
			return 0
		fi

		# `ls -dl` format: "%s %u %s %s %u %s %s -> %s\n",
		#   <file mode>, <number of links>, <owner name>, <group name>,
		#   <size>, <date and time>, <pathname of link>, <contents of link>
		# https://pubs.opengroup.org/onlinepubs/9699919799/utilities/ls.html
		link=$(ls -dl -- "$target" 2>/dev/null) || break
		target=${link#*" $target -> "}
	done
	return 1
}

self=$(readlinkf "$0")
base="${self%/*/*}"

# shellcheck source=lib/getoptions.sh
. "$base/lib/getoptions.sh"
# shellcheck source=lib/getoptions_abbr.sh
. "$base/lib/getoptions_abbr.sh"
# shellcheck source=lib/getoptions_help.sh
. "$base/lib/getoptions_help.sh"

parser_definition() {
	setup REST help:usage abbr:true mode:+ width:24 error -- \
		"Usage: ${2##*/} [options...] <path> <parser> [arguments...]" '' \
		'Options:'

	param DEFINITION -d --definition var:NAME -- \
		"Specify the parser definition name" \
		"  (default: filename without extensions)"

	option INDENT -i --indent on:2 validate:number var:N -- \
		"Use N (default: 2) spaces instead of tabs for indentation"

	option SHELLCHECK --shellcheck var:DIRECTIVES on:"$SHELLCHECK" -- \
		"Embed the shellcheck directives" "  (default: '$SHELLCHECK')"

	flag COMMENT --no-comments init:@on -- \
		"Do not embed comments"

	disp :usage -h --help -- "Display this help and exit"
	disp GETOPTIONS_VERSION -v --version -- "Display the version and exit"
}
number() { case $OPTARG in (*[!0-9]*) return 1; esac; }

abort() { echo "$@" >&2; exit 1; }

error() {
	case $2 in
		number:*) echo "Not a number: $3" ;;
		*) return 0 ;;
	esac
	return 1
}

parser_definition_not_found() {
	abort "The parser definition '$1' not found"
}

is_valid_identifier() {
	case $1 in (*[!a-zA-Z0-9_]*) return 1; esac
	return 0
}

eval "$(getoptions parser_definition parse "$0")"
parse "$@"
eval "set -- $REST"
[ $# -lt 2 ] && usage && exit 1

if [ ! "$DEFINITION" ]; then
	DEFINITION=${1##*/} && DEFINITION=${DEFINITION%%.*}
fi
file=$1 parser=$2
shift
set -- "$DEFINITION" "$@"

if ! is_valid_identifier "$DEFINITION"; then
	abort "The parser definition name '$DEFINITION' is not a valid name"
fi
if ! is_valid_identifier "$parser"; then
	abort "The parser name '$parser' is not a valid name"
fi

generate() {
	eval "$DEFINITION() { parser_definition_not_found \"\$DEFINITION\"; }"
	# shellcheck disable=SC1090
	. "$file"
	getoptions "$@"
}

parse_shellcheck_directives() {
	shellcheck_shell='' shellcheck_disable=''
	# shellcheck disable=SC2086
	set -- $1
	while [ $# -gt 0 ]; do
		case $1 in
			shell=*) shellcheck_shell=${1#*\=} ;;
			disable=*) shellcheck_disable=${1#*\=} ;;
		esac
		shift
	done
}

tab2space() {
	TAB=$(printf '\t')

	prefix='' i=0
	while [ "$i" -lt "${1:-0}" ] && i=$(($i + 1)); do
		prefix="$prefix "
	done

	while IFS= read -r line; do
		if [ "$prefix" ]; then
			i=0
			while [ "$line" ]; do
				case $line in ([!${TAB}]*) break; esac
				i=$(($i + 1)) line=${line#?}
			done
			while [ "$i" -gt 0 ] && i=$(($i - 1)); do
				line="${prefix}${line}"
			done
		fi
		printf '%s\n' "$line"
	done
}

comment() { [ ! "$COMMENT" ] || echo "#" "$@"; }
shellcheck() { [ ! "$2" ] || printf '# shellcheck %s=%s\n' "$1" "$2"; }

main() {
	parse_shellcheck_directives "$SHELLCHECK"
	shellcheck shell "$shellcheck_shell"
	comment "Generated by getoptions (BEGIN)"
	comment "URL: https://github.com/ko1nksm/getoptions ($GETOPTIONS_VERSION)"
	while IFS= read -r line; do
		if [ "$line" = "$parser() {" ]; then
			shellcheck disable "$shellcheck_disable"
		fi
		printf '%s\n' "$line"
	done
	comment "Generated by getoptions (END)"
}

generated=$(generate "$@")
printf '%s\n' "$generated" | main | tab2space "$INDENT"
